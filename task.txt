The text file contains, line by line, data related to a travel agency. Each line includes a unique agency ID, the agency's name, and the city where the agency is located.

The database, in turn, contains a table describing trips. It is a simple table implemented using a database engine of your choice. The table includes a unique trip ID, the destination country (name), the price of the trip, the number of people going on the trip, and the unique ID of the agency that organized the trip (the same as in the text file).

The task is to combine text file handling with database access. Therefore, the database contains only one table and no relationships are created.

You should define appropriate classes:

    TravelAgency, to store information loaded from the text file.

    Trip, to store information from the database.

Then, implement the Offer class, which contains a map. The map uses a TravelAgency object as the key and a set (collection without duplicates) of Trip objects as the value â€” representing trips organized by the corresponding agency.

The Offer constructor should accept as arguments:

    the name of the text file, and

    the parameters required to connect to the database (as strings or a single string).

In the constructor, fill the map using data loaded from the external sources.

Using operations on maps and collections (Java developers may use Java 8 streams), implement the following methods in the Offer class:

    Return the name of the travel agency that organized the most trips.

    Return the name of the travel agency that earned the most from trips, assuming each agency earns 10% of the trip value, taxed at 19%.

    Return the name of the country most frequently visited on trips.

    Generate a report that, for each agency, shows:

        the average price of its trips,

        and the trip whose price is the closest to that average.

    Generate a report that, for each destination country, shows:

        the travel agency that most frequently organized trips to that country.

    Based on the map, generate a list containing only the trips to European countries. Whether a country is in Europe should be determined using a text file that you prepare in advance with a list of selected European countries.

    Prepare a map where:

        the key is the number of participants in a trip,

        the value is a set (collection without duplicates) of all trips with that number of participants.

    Based on the map from the previous point, for each group size determine the most expensive trip. Return this report as a map where:

        the key is the number of participants,

        the value is the most expensive trip for that group.
        Sort the map in descending order by the price per person of each trip.

